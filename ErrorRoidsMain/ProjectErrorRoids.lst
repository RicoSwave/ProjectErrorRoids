Microsoft (R) Macro Assembler Version 14.00.23026.0	    03/17/16 19:51:12
errorRoids.asm						     Page 1 - 1


				;errorRoids.asm
				;A simple action shooter
				;Windows32 Application 

				;Include files from Irvine libraries found in the ..\Irvine folder
				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE GraphWin.inc
			      C .NOLIST
			      C .LIST
			      C 

				;==================== DATA =======================
 00000000			.data
				; Playfield values
 00000000 00000032		shipLocX DWORD 50		; X coordinate of the ship
 00000004 00000032		shipLocY DWORD 50		; Y coordinate of the ship
 00000008 0000005A		shipHeading DWORD 90	; Heading of the ship
 0000000C 00000000		shipAccel DWORD 0		; acceleration of the ship due to thrust
 00000010 00000000		shotsFired DWORD 0		; number of shots fired
 00000014 56 00			shipPlaceholder BYTE "V",0

				; Player Values
 00000016 00000000		playerScore DWORD 0		; player score
 0000001A 00000000		playerLives DWORD 0		; player number of lives/tries

				; Welcome Message
 0000001E 45 72 72 6F 72	GreetTitle BYTE "ErrorRoids!",0
	   52 6F 69 64 73
	   21 00
 0000002A 57 65 6C 63 6F	GreetText  BYTE "Welcome to ErrorRoids! "
	   6D 65 20 74 6F
	   20 45 72 72 6F
	   72 52 6F 69 64
	   73 21 20
 00000041  50 72 65 73 73		       BYTE "Press OK to begin. ",0
	   20 4F 4B 20 74
	   6F 20 62 65 67
	   69 6E 2E 20 00

				; Exit Message
 00000055 54 68 61 6E 6B	CloseMsg   BYTE "Thank you for playing!",0
	   20 79 6F 75 20
	   66 6F 72 20 70
	   6C 61 79 69 6E
	   67 21 00

				; Fake errror message strings to display at game end
 0000006C 53 79 6E 74 61	gameOverMessage BYTE "Syntax Error Line A70 - Termination Expected",
	   78 20 45 72 72
	   6F 72 20 4C 69
	   6E 65 20 41 37
	   30 20 2D 20 54
	   65 72 6D 69 6E
	   61 74 69 6F 6E
	   20 45 78 70 65
	   63 74 65 64 45
	   72 72 6F 72 3A
	   20 55 6E 61 62
	   6C 65 20 74 6F
	   20 4F 70 65 6E
	   20 46 69 6C 65
	   20 2D 20 46 69
	   6C 65 20 6E 6F
	   74 20 66 6F 75
	   6E 64 00
								 "Error: Unable to Open File - File not found", 0

				; Playtest messages
 000000C4 57 65 61 70 6F	PopupTitle BYTE "Weapon Fired!",0
	   6E 20 46 69 72
	   65 64 21 00
 000000D2 50 45 57 21 20	PopupText  BYTE "PEW! "
 000000D7  50 45 57 21 00		       BYTE "PEW!",0

				;Debug Messages
 000000DC 53 68 6F 74 73	shots BYTE "Shots Fired: ",0
	   20 46 69 72 65
	   64 3A 20 00
 000000EA 53 68 69 70 20	xPos BYTE "Ship X Coord: ",0
	   58 20 43 6F 6F
	   72 64 3A 20 00
 000000F9 53 68 69 70 20	yPos BYTE "Ship Y Coord: ",0
	   59 20 43 6F 6F
	   72 64 3A 20 00
 00000108 50 6C 61 79 65	score BYTE "Player Score: ",0
	   72 20 53 63 6F
	   72 65 3A 20 00
 00000117 53 68 69 70 20	sAccel BYTE "Ship Acceleration: ",0
	   41 63 63 65 6C
	   65 72 61 74 69
	   6F 6E 3A 20 00
 0000012B 50 6C 61 79 65	pLives BYTE "Player Lives: ",0
	   72 20 4C 69 76
	   65 73 3A 20 00
 0000013A 53 68 69 70 20	sHeading BYTE "Ship heading: ",0
	   68 65 61 64 69
	   6E 67 3A 20 00

				; Window Pane Strings
 00000149 45 72 72 6F 72	ErrorTitle  BYTE "Error",0
	   00
 0000014F 45 72 72 6F 72	WindowName  BYTE "ErrorRoids!",0
	   52 6F 69 64 73
	   21 00
 0000015B 45 72 72 6F 72	className   BYTE "ErrorRoids ASMWin",0
	   52 6F 69 64 73
	   20 41 53 4D 57
	   69 6E 00

				; Define the Application's Window class structure.
 0000016D 00000000		MainWin WNDCLASS <NULL,WinProc,NULL,NULL,NULL,NULL,NULL, \
	   00000230 R
	   00000000
	   00000000
	   00000000
	   00000000
	   00000000
	   00000005
	   00000000
	   0000015B R
					COLOR_WINDOW,NULL,className>

 00000195 00000000		msg	      MSGStruct <>
	   00000000
	   00000000
	   00000000
	   00000000
	   00000000
	   00000000
 000001B1 00000000		winRect   RECT <>
	   00000000
	   00000000
	   00000000
 000001C1 00000000		hMainWnd  DWORD ?
 000001C5 00000000		hInstance DWORD ?

				;=================== MACROS =========================

				;-----------------------------------------------------
				ConsoleMessage MACRO N
				; Macro which writes a string to console.
				;-----------------------------------------------------
				local L

					ifb <&N>
					  exitm
					endif

					push edx
					xor edx,edx
					mov edx, offset &N
					call WriteString
					call CRLF
					pop edx

				endm



				;=================== CODE =========================
 00000000			.code
				;-----------------------------------------------------
 00000000			Paint PROC,
					hWnd:DWORD, localMsg:DWORD, wParam:DWORD, lParam:DWORD
				; The application's paint handler.
				;-----------------------------------------------------
				     ; TODO: Paint handler
 00000003  FF 75 08			push hWnd
 00000006  8F 45 08			pop hWnd
 00000009  FF 75 0C			push localMsg
 0000000C  8F 45 0C			pop localMsg
 0000000F  FF 75 10			push wParam
 00000012  8F 45 10			pop wParam
 00000015  FF 75 14			push lParam
 00000018  8F 45 14			pop lParam

					ret
 0000001F			Paint endP

 0000001F			WinMain PROC
				; Get a handle to the current process.
					INVOKE GetModuleHandle, NULL
 00000026  A3 000001C5 R		mov hInstance, eax
 0000002B  A3 0000017D R		mov MainWin.hInstance, eax

				; Load the program's icon and cursor.
					INVOKE LoadIcon, NULL, IDI_APPLICATION
 0000003C  A3 00000181 R		mov MainWin.hIcon, eax
					INVOKE LoadCursor, NULL, IDC_ARROW
 0000004D  A3 00000185 R		mov MainWin.hCursor, eax

				; Register the window class.
					INVOKE RegisterClass, ADDR MainWin
					.IF eax == 0
 00000060  E8 000002A2			  call ErrorHandler
 00000065  E9 000000FD			  jmp Exit_Program
					.ENDIF

				; Create the application's main window.
				; Returns a handle to the main window in EAX.
					INVOKE CreateWindowEx, 0, ADDR className,
					  ADDR WindowName,MAIN_WINDOW_STYLE,
					  CW_USEDEFAULT,CW_USEDEFAULT,CW_USEDEFAULT,
					  CW_USEDEFAULT,NULL,NULL,hInstance,NULL
 000000A0  A3 000001C1 R		mov hMainWnd,eax

				; If CreateWindowEx failed, display a message & exit.
					.IF eax == 0
 000000A9  E8 00000259			  call ErrorHandler
 000000AE  E9 000000B4			  jmp  Exit_Program
					.ENDIF

				; Show and draw the window.
					;Invoke Paint,hWnd,localMsg,wParam,lParam
					INVOKE ShowWindow, hMainWnd, SW_SHOW	
					INVOKE UpdateWindow, hMainWnd

				; Display a greeting message.
					INVOKE MessageBox, hMainWnd, ADDR GreetText,
					  ADDR GreetTitle, MB_OK

				; Begin the program's message-handling loop.
 000000E2			Main_Loop:
					; Get next message from the queue.
					INVOKE GetMessage, ADDR msg, NULL,NULL,NULL

					; Quit if no more messages.
					.IF eax == 0
 000000F6  EB 6F			  jmp Exit_Program
					.ENDIF

					; TODO: Implement Draw Playfield

					; TODO: Implement Decrease object acceleration due to inertia

					;-------ACCEL-----------------
					; TODO: Test/Fix ship acceleration
 000000F8  83 3D 0000000C R		cmp shipAccel,1
	   01
 000000FF  74 5E			je AccelTrue
 00000101				AccelDone:
					;-------ACCEL-----------------
				    
				    ;-----BOUNDS------------------
				    ; Ship bounds checking
				    ; TODO: bounds checking & wrapping for other objects
 00000101  83 3D 00000000 R	    cmp shipLocX,0		; Check for leaving X lower bound
	   00
 00000108  73 0A		    jae XinBoundA
 0000010A  C7 05 00000000 R	    mov shipLocX,500	; Wrap on X border
	   000001F4
 00000114			    XinBoundA:

 00000114  81 3D 00000000 R	    cmp shipLocX,500	; Check for leaving X upper bound
	   000001F4
 0000011E  7E 0A		    jle XinBoundB
 00000120  C7 05 00000000 R	    mov shipLocX,0		; Wrap on X border
	   00000000
 0000012A			    XinBoundB:

 0000012A  83 3D 00000004 R	    cmp shipLocY,0		; Check for leaving Y lower bound
	   00
 00000131  73 0A		    jae YinBoundA
 00000133  C7 05 00000004 R	    mov shipLocY,500	; Wrap on Y border
	   000001F4
 0000013D			    YinBoundA:

 0000013D  81 3D 00000004 R	    cmp shipLocY,500	; Check for leaving Y upper bound
	   000001F4
 00000147  7E 0A		    jle YinBoundB
 00000149  C7 05 00000004 R	    mov shipLocY,0		; Wrap on Y border
	   00000000
 00000153			    YinBoundB:

				    ;-----BOUNDS------------------

					; Relay the message to the program's WinProc.
					INVOKE DispatchMessage, ADDR msg
 0000015D  EB 83			jmp Main_Loop

 0000015F			    AccelTrue:
				     ; TODO: Ship Acceleration with respect to heading
 0000015F  FF 05 00000000 R		inc shipLocX
 00000165  EB 9A		     jmp AccelDone

 00000167			Exit_Program:
					  ;-----------------------------
				       ; Debug Messages to Console
					  ConsoleMessage xPos
 00000167  52		     1		push edx
 00000168  33 D2	     1		xor edx,edx
 0000016A  BA 000000EA R     1		mov edx, offset xPos
 0000016F  E8 00000000 E     1		call WriteString
 00000174  E8 00000000 E     1		call CRLF
 00000179  5A		     1		pop edx
 0000017A  A1 00000000 R	       mov eax,shipLocX
 0000017F  E8 00000000 E		  Call WriteDec
 00000184  E8 00000000 E		  Call CRLF

					  ConsoleMessage yPos
 00000189  52		     1		push edx
 0000018A  33 D2	     1		xor edx,edx
 0000018C  BA 000000F9 R     1		mov edx, offset yPos
 00000191  E8 00000000 E     1		call WriteString
 00000196  E8 00000000 E     1		call CRLF
 0000019B  5A		     1		pop edx
 0000019C  A1 00000004 R		  MOV eax,shipLocY
 000001A1  E8 00000000 E		  Call WriteDec
 000001A6  E8 00000000 E		  Call CRLF

					  ConsoleMessage shots
 000001AB  52		     1		push edx
 000001AC  33 D2	     1		xor edx,edx
 000001AE  BA 000000DC R     1		mov edx, offset shots
 000001B3  E8 00000000 E     1		call WriteString
 000001B8  E8 00000000 E     1		call CRLF
 000001BD  5A		     1		pop edx
 000001BE  A1 00000010 R		  MOV eax,shotsFired
 000001C3  E8 00000000 E		  call WriteDec
 000001C8  E8 00000000 E		  call CRLF

					  ConsoleMessage sAccel
 000001CD  52		     1		push edx
 000001CE  33 D2	     1		xor edx,edx
 000001D0  BA 00000117 R     1		mov edx, offset sAccel
 000001D5  E8 00000000 E     1		call WriteString
 000001DA  E8 00000000 E     1		call CRLF
 000001DF  5A		     1		pop edx
 000001E0  A1 0000000C R		  MOV eax,shipAccel
 000001E5  E8 00000000 E		  call WriteDec
 000001EA  E8 00000000 E		  call CRLF

					  ConsoleMessage sHeading
 000001EF  52		     1		push edx
 000001F0  33 D2	     1		xor edx,edx
 000001F2  BA 0000013A R     1		mov edx, offset sHeading
 000001F7  E8 00000000 E     1		call WriteString
 000001FC  E8 00000000 E     1		call CRLF
 00000201  5A		     1		pop edx
 00000202  A1 00000008 R		  MOV eax,shipHeading
 00000207  E8 00000000 E		  call WriteDec
 0000020C  E8 00000000 E		  call CRLF

					  ConsoleMessage gameOverMessage
 00000211  52		     1		push edx
 00000212  33 D2	     1		xor edx,edx
 00000214  BA 0000006C R     1		mov edx, offset gameOverMessage
 00000219  E8 00000000 E     1		call WriteString
 0000021E  E8 00000000 E     1		call CRLF
 00000223  5A		     1		pop edx
 00000224  E8 00000000 E		  call CRLF
					  ;-----------------------------

					  INVOKE ExitProcess,0
 00000230			WinMain ENDP

				;-----------------------------------------------------
 00000230			WinProc PROC,
					hWnd:DWORD, localMsg:DWORD, wParam:DWORD, lParam:DWORD
				; The application's message handler, which handles
				; application-specific messages. All other messages
				; are forwarded to the default Windows message
				; handler.
				;-----------------------------------------------------
 00000233  8B 45 0C			mov eax, localMsg

					.IF eax == WM_LBUTTONDOWN		; mouse button?
					  INVOKE MessageBox, hWnd, ADDR PopupText,
					    ADDR PopupTitle, MB_OK
 00000251  FF 05 00000010 R		  inc shotsFired			; increase shots fired
 00000257  E9 000000A7			  jmp WinProcExit
					.ELSEIF eax == WM_CREATE		; create window?
					  
 00000266  E9 00000098			  jmp WinProcExit
					.ELSEIF eax == WM_CLOSE		; close window?
					  INVOKE MessageBox, hWnd, ADDR CloseMsg,
					    ADDR WindowName, MB_OK
					  INVOKE PostQuitMessage,0
 00000290  EB 71			  jmp WinProcExit
					.ELSEIF eax == WM_KEYDOWN     ; TODO: Test keyboard controls
					  ;jump table to find virtual key from wparam
 0000029B  8B 45 10			  mov eax,wparam
 0000029E  83 F8 26			  cmp eax,VK_UP			; up arrow
 000002A1  74 16			  je UpKey
 000002A3  83 F8 28			  cmp eax,VK_DOWN			; down arrow
 000002A6  74 1D			  je DownKey
 000002A8  83 F8 25			  cmp eax,VK_LEFT			; left arrow
 000002AB  74 24			  je LeftKey
 000002AD  83 F8 27			  cmp eax,VK_RIGHT			; right arrow
 000002B0  74 28			  je RightKey
 000002B2  83 F8 20			  cmp eax,VK_SPACE            ; space bar - toggles thrusters
 000002B5  74 2C			  je SpaceKey
 000002B7  EB 33			  jmp Default
					  ; Ship movement - 3 pixels per press
					  ; Upper left corner of window is (0,0) Starting point of the ship is (50,50)
 000002B9				  UpKey:
 000002B9  C7 05 0000000C R		    mov shipAccel,1		; fire thrusters
	   00000001
 000002C3				    endUp:
 000002C3  EB 27			    jmp keydownExit
 000002C5			       DownKey:
 000002C5  C7 05 0000000C R		    mov shipAccel,0		; turn off thrusters
	   00000000
 000002CF  EB 1B			    jmp keydownExit
 000002D1				  LeftKey:
 000002D1  83 2D 00000008 R		    sub shipHeading,20	; Decrease Heading by 20 degrees
	   14
 000002D8  EB 12			    jmp keydownExit
 000002DA				  RightKey:
 000002DA  83 05 00000008 R		    add shipHeading,20	; Increase Heading by 20 degrees
	   14
 000002E1  EB 09			    jmp keydownExit
 000002E3				  SpaceKey:
 000002E3  83 35 0000000C R		    XOR shipAccel,1		; Toggle thrusters
	   01
 000002EA  EB 00			    jmp keydownExit
 000002EC			       Default:
 000002EC			      keydownExit:
 000002EC  EB 15			 jmp WinProcExit

					.ELSE		; other message?
					  INVOKE DefWindowProc, hWnd, localMsg, wParam, lParam
 00000301  EB 00			  jmp WinProcExit
					.ENDIF

 00000303			WinProcExit:
					ret

 00000307			WinProc ENDP

				;---------------------------------------------------
 00000307			ErrorHandler PROC
				; Display the appropriate system error message.
				; Used for real errors.
				;---------------------------------------------------
 000001C9			.data
 000001C9 00000000		pErrorMsg  DWORD ?		; ptr to error message
 000001CD 00000000		messageID  DWORD ?
 00000307			.code
					INVOKE GetLastError	; Returns message ID in EAX
 0000030C  A3 000001CD R		mov messageID,eax

					; Get the corresponding message string.
					INVOKE FormatMessage, FORMAT_MESSAGE_ALLOCATE_BUFFER + \
					  FORMAT_MESSAGE_FROM_SYSTEM,NULL,messageID,NULL,
					  ADDR pErrorMsg,NULL,NULL

					; Display the error message.
					INVOKE MessageBox,NULL, pErrorMsg, ADDR ErrorTitle,
					  MB_ICONERROR+MB_OK

					; Free the error message string.
					INVOKE LocalFree, pErrorMsg
 0000034D  C3				ret
 0000034E			ErrorHandler ENDP

				END WinMain
Microsoft (R) Macro Assembler Version 14.00.23026.0	    03/17/16 19:51:12
errorRoids.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

ConsoleMessage . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
MSGStruct  . . . . . . . . . . .	 0000001C
  msgWnd . . . . . . . . . . . .	 00000000	 DWord
  msgMessage . . . . . . . . . .	 00000004	 DWord
  msgWparam  . . . . . . . . . .	 00000008	 DWord
  msgLparam  . . . . . . . . . .	 0000000C	 DWord
  msgTime  . . . . . . . . . . .	 00000010	 DWord
  msgPt  . . . . . . . . . . . .	 00000014	 QWord
POINT  . . . . . . . . . . . . .	 00000008
  X  . . . . . . . . . . . . . .	 00000000	 DWord
  Y  . . . . . . . . . . . . . .	 00000004	 DWord
RECT . . . . . . . . . . . . . .	 00000010
  left . . . . . . . . . . . . .	 00000000	 DWord
  top  . . . . . . . . . . . . .	 00000004	 DWord
  right  . . . . . . . . . . . .	 00000008	 DWord
  bottom . . . . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord
WNDCLASS . . . . . . . . . . . .	 00000028
  style  . . . . . . . . . . . .	 00000000	 DWord
  lpfnWndProc  . . . . . . . . .	 00000004	 DWord
  cbClsExtra . . . . . . . . . .	 00000008	 DWord
  cbWndExtra . . . . . . . . . .	 0000000C	 DWord
  hInstance  . . . . . . . . . .	 00000010	 DWord
  hIcon  . . . . . . . . . . . .	 00000014	 DWord
  hCursor  . . . . . . . . . . .	 00000018	 DWord
  hbrBackground  . . . . . . . .	 0000001C	 DWord
  lpszMenuName . . . . . . . . .	 00000020	 DWord
  lpszClassName  . . . . . . . .	 00000024	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000001D1 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000034E Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateWindowExA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DefWindowProcA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DispatchMessageA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ErrorHandler . . . . . . . . . .	P Near	 00000307 _TEXT	Length= 00000047 Public STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMessageA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetModuleHandleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetWindowDC  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetWindowRect  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LoadCursorA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LoadIconA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Paint  . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000001F Public STDCALL
  hWnd . . . . . . . . . . . . .	DWord	 bp + 00000008
  localMsg . . . . . . . . . . .	DWord	 bp + 0000000C
  wParam . . . . . . . . . . . .	DWord	 bp + 00000010
  lParam . . . . . . . . . . . .	DWord	 bp + 00000014
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PostQuitMessage  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RegisterClassA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowWindow . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
UpdateWindow . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WinMain  . . . . . . . . . . . .	P Near	 0000001F _TEXT	Length= 00000211 Public STDCALL
  Main_Loop  . . . . . . . . . .	L Near	 000000E2 _TEXT	
  AccelDone  . . . . . . . . . .	L Near	 00000101 _TEXT	
  XinBoundA  . . . . . . . . . .	L Near	 00000114 _TEXT	
  XinBoundB  . . . . . . . . . .	L Near	 0000012A _TEXT	
  YinBoundA  . . . . . . . . . .	L Near	 0000013D _TEXT	
  YinBoundB  . . . . . . . . . .	L Near	 00000153 _TEXT	
  AccelTrue  . . . . . . . . . .	L Near	 0000015F _TEXT	
  Exit_Program . . . . . . . . .	L Near	 00000167 _TEXT	
WinProc  . . . . . . . . . . . .	P Near	 00000230 _TEXT	Length= 000000D7 Public STDCALL
  hWnd . . . . . . . . . . . . .	DWord	 bp + 00000008
  localMsg . . . . . . . . . . .	DWord	 bp + 0000000C
  wParam . . . . . . . . . . . .	DWord	 bp + 00000010
  lParam . . . . . . . . . . . .	DWord	 bp + 00000014
  UpKey  . . . . . . . . . . . .	L Near	 000002B9 _TEXT	
  endUp  . . . . . . . . . . . .	L Near	 000002C3 _TEXT	
  DownKey  . . . . . . . . . . .	L Near	 000002C5 _TEXT	
  LeftKey  . . . . . . . . . . .	L Near	 000002D1 _TEXT	
  RightKey . . . . . . . . . . .	L Near	 000002DA _TEXT	
  SpaceKey . . . . . . . . . . .	L Near	 000002E3 _TEXT	
  Default  . . . . . . . . . . .	L Near	 000002EC _TEXT	
  keydownExit  . . . . . . . . .	L Near	 000002EC _TEXT	
  WinProcExit  . . . . . . . . .	L Near	 00000303 _TEXT	
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
COLOR_BACKGROUND . . . . . . . .	Number	 00000002h   
COLOR_WINDOW . . . . . . . . . .	Number	 00000005h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CW_USEDEFAULT  . . . . . . . . .	Number	 -80000000h   
CloseMsg . . . . . . . . . . . .	Byte	 00000055 _DATA	
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
CreateWindowEx . . . . . . . . .	Text   	 CreateWindowExA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
DefWindowProc  . . . . . . . . .	Text   	 DefWindowProcA
DispatchMessage  . . . . . . . .	Text   	 DispatchMessageA
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
ErrorTitle . . . . . . . . . . .	Byte	 00000149 _DATA	
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
GetMessage . . . . . . . . . . .	Text   	 GetMessageA
GetModuleHandle  . . . . . . . .	Text   	 GetModuleHandleA
GreetText  . . . . . . . . . . .	Byte	 0000002A _DATA	
GreetTitle . . . . . . . . . . .	Byte	 0000001E _DATA	
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDC_ARROW  . . . . . . . . . . .	Number	 00007F00h   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDI_APPLICATION  . . . . . . . .	Number	 00007F00h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
LoadCursor . . . . . . . . . . .	Text   	 LoadCursorA
LoadIcon . . . . . . . . . . . .	Text   	 LoadIconA
MAIN_WINDOW_STYLE  . . . . . . .	Number	 118F0000h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MainWin  . . . . . . . . . . . .	WNDCLASS  0000016D _DATA	
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
PopupText  . . . . . . . . . . .	Byte	 000000D2 _DATA	
PopupTitle . . . . . . . . . . .	Byte	 000000C4 _DATA	
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
RegisterClass  . . . . . . . . .	Text   	 RegisterClassA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SW_SHOW  . . . . . . . . . . . .	Number	 00000005h   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WM_CLOSE . . . . . . . . . . . .	Number	 00000010h   
WM_CREATE  . . . . . . . . . . .	Number	 00000001h   
WM_KEYDOWN . . . . . . . . . . .	Number	 00000100h   
WM_LBUTTONDOWN . . . . . . . . .	Number	 00000201h   
WS_BORDER  . . . . . . . . . . .	Number	 00800000h   
WS_CAPTION . . . . . . . . . . .	Number	 00C00000h   
WS_DLGFRAME  . . . . . . . . . .	Number	 00400000h   
WS_MAXIMIZEBOX . . . . . . . . .	Number	 00010000h   
WS_MINIMIZEBOX . . . . . . . . .	Number	 00020000h   
WS_OVERLAPPED  . . . . . . . . .	Number	 00000000h   
WS_SYSMENU . . . . . . . . . . .	Number	 00080000h   
WS_THICKFRAME  . . . . . . . . .	Number	 00040000h   
WS_VISIBLE . . . . . . . . . . .	Number	 10000000h   
WindowName . . . . . . . . . . .	Byte	 0000014F _DATA	
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
className  . . . . . . . . . . .	Byte	 0000015B _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gameOverMessage  . . . . . . . .	Byte	 0000006C _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
hInstance  . . . . . . . . . . .	DWord	 000001C5 _DATA	
hMainWnd . . . . . . . . . . . .	DWord	 000001C1 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
messageID  . . . . . . . . . . .	DWord	 000001CD _DATA	
msg  . . . . . . . . . . . . . .	MSGStruct  00000195 _DATA	
pErrorMsg  . . . . . . . . . . .	DWord	 000001C9 _DATA	
pLives . . . . . . . . . . . . .	Byte	 0000012B _DATA	
playerLives  . . . . . . . . . .	DWord	 0000001A _DATA	
playerScore  . . . . . . . . . .	DWord	 00000016 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
sAccel . . . . . . . . . . . . .	Byte	 00000117 _DATA	
sHeading . . . . . . . . . . . .	Byte	 0000013A _DATA	
score  . . . . . . . . . . . . .	Byte	 00000108 _DATA	
shipAccel  . . . . . . . . . . .	DWord	 0000000C _DATA	
shipHeading  . . . . . . . . . .	DWord	 00000008 _DATA	
shipLocX . . . . . . . . . . . .	DWord	 00000000 _DATA	
shipLocY . . . . . . . . . . . .	DWord	 00000004 _DATA	
shipPlaceholder  . . . . . . . .	Byte	 00000014 _DATA	
shotsFired . . . . . . . . . . .	DWord	 00000010 _DATA	
shots  . . . . . . . . . . . . .	Byte	 000000DC _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
winRect  . . . . . . . . . . . .	RECT	 000001B1 _DATA	
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
xPos . . . . . . . . . . . . . .	Byte	 000000EA _DATA	
yPos . . . . . . . . . . . . . .	Byte	 000000F9 _DATA	
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
